import Head from "next/head";
import {
  Container,
  InputLabel,
  FormControl,
  MenuItem,
  Select,
  ToggleButton,
  ToggleButtonGroup,
  SelectChangeEvent,
} from "@mui/material";
import useMediaQuery from "@mui/material/useMediaQuery";
import { useState } from "react";
import theme from "@/lib/theme";

export default function Home() {
  const [selection, setSelection] = useState("price");
  const isMobile = useMediaQuery(theme.breakpoints.down("sm"));

  function handleChange(event: React.MouseEvent<HTMLElement>, value: string) {
    setSelection(value);
  }

  function handleSelectChange(event: SelectChangeEvent) {
    setSelection(event.target.value);
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Container
          sx={{
            display: "flex",
            flexDirection: "column",
            justifyContent: "center",
            alignItems: "center",
            height: "100vh",
          }}
          maxWidth="lg"
        >
          {isMobile && (
            <FormControl fullWidth>
              <Select
                value={selection}
                onChange={handleSelectChange}
                sx={{ backgroundColor: "white" }}
              >
                <MenuItem value="price">Sort by price</MenuItem>
                <MenuItem value="name">Sort by name</MenuItem>
                <MenuItem value="relevance">Sort by relevance</MenuItem>
              </Select>
            </FormControl>
          )}
          {!isMobile && (
            <ToggleButtonGroup
              exclusive
              color="primary"
              value={selection}
              onChange={handleChange}
              aria-label="Platform"
              sx={{ backgroundColor: "white" }}
            >
              <ToggleButton value="price">Sort by price</ToggleButton>
              <ToggleButton value="name">Sort by name</ToggleButton>
              <ToggleButton value="relevance">Sort by relevance</ToggleButton>
            </ToggleButtonGroup>
          )}
        </Container>
      </main>
    </>
  );
}
